{"ast":null,"code":"import _slicedToArray from \"/Users/imac20/Desktop/ProjetoCurso/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/imac20/Desktop/ProjetoCurso/web/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport api from './services/api';\nimport './global.css';\nimport './App.css';\nimport './Sidebar.css';\nimport './Main.css';\nimport DevItem from './components/DevItem';\nimport DevAdd from './components/DevForm/DevAdd';\nimport DevUpdate from './components/DevForm/DevUpdate';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        devs = _useState2[0],\n        setDevs = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editing = _useState4[0],\n        setEditing = _useState4[1];\n\n  const initialFormState = {\n    id: null,\n    nome: '',\n    github_username: ''\n  };\n\n  const _useState5 = useState(initialFormState),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentUser = _useState6[0],\n        setCurrentUser = _useState6[1];\n\n  useEffect(() => {\n    async function loadDevs() {\n      const response = await api.get('/devs');\n      setDevs(response.data);\n    }\n\n    loadDevs();\n  }, []);\n\n  async function handleAddDev(data) {\n    const response = await api.post('/devs', data);\n    setDevs([...devs, response.data]);\n  }\n\n  const editRow = dev => {\n    setEditing(true);\n    setCurrentUser({\n      github_username: dev.github_username,\n      techs: dev.techs,\n      bio: dev.bio\n    });\n  };\n\n  async function handleUpdateDev(dev) {\n    setEditing(false); //await api.put(`/update?github_usernam=${github_username}`);\n\n    const AtualizaDevs = {\n      github_username: dev.github_username,\n      techs: dev.techs,\n      bio: dev.bio\n    }; //setDevs(AtualizaDevs);\n\n    console.log(AtualizaDevs);\n  }\n\n  async function handleDeleteDev(github_username) {\n    await api.delete(`/delete?github_username=${github_username}`);\n    const AtualizaDevs = devs.filter(element => element.github_username !== github_username);\n    setDevs(AtualizaDevs);\n  }\n\n  return React.createElement(\"div\", {\n    id: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, editing ? React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Editar User\"), React.createElement(DevUpdate, {\n    editing: editing,\n    setEditing: setEditing,\n    currentUser: currentUser,\n    handleUpdateDev: handleUpdateDev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })) : React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Cadastrar\"), React.createElement(DevAdd, {\n    handleAddDev: handleAddDev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, devs.map(dev => React.createElement(DevItem, {\n    key: dev._id,\n    dev: dev,\n    handleDeleteDev: handleDeleteDev,\n    editRow: editRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/imac20/Desktop/ProjetoCurso/web/src/App.js"],"names":["React","useEffect","useState","api","DevItem","DevAdd","DevUpdate","App","devs","setDevs","editing","setEditing","initialFormState","id","nome","github_username","currentUser","setCurrentUser","loadDevs","response","get","data","handleAddDev","post","editRow","dev","techs","bio","handleUpdateDev","AtualizaDevs","console","log","handleDeleteDev","delete","filter","element","map","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from './services/api';\n\nimport './global.css';\nimport './App.css';\nimport './Sidebar.css';\nimport './Main.css';\n\nimport DevItem from './components/DevItem'\nimport DevAdd from './components/DevForm/DevAdd'\nimport DevUpdate from './components/DevForm/DevUpdate'\n\nfunction App() {\n  const [devs, setDevs] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const initialFormState = { id: null, nome: '', github_username: '' }\n  const [currentUser, setCurrentUser] = useState(initialFormState)\n\n  useEffect(() => {\n    async function loadDevs() {\n      const response = await api.get('/devs');\n      setDevs(response.data);\n    }\n    loadDevs();\n  }, [])\n\n  async function handleAddDev(data) {\n    const response = await api.post('/devs', data)\n    setDevs([...devs, response.data]);\n  }\n\n  const editRow = dev => {\n    setEditing(true)\n    setCurrentUser({ github_username: dev.github_username, techs: dev.techs, bio: dev.bio });\n  }\n\n  async function handleUpdateDev(dev) {\n    setEditing(false)\n    //await api.put(`/update?github_usernam=${github_username}`);\n    const AtualizaDevs = { github_username: dev.github_username, techs: dev.techs, bio: dev.bio }\n    //setDevs(AtualizaDevs);\n    console.log(AtualizaDevs)\n  }\n\n  async function handleDeleteDev(github_username) {\n    await api.delete(`/delete?github_username=${github_username}`)\n    const AtualizaDevs = devs.filter(element => element.github_username !== github_username);\n    setDevs(AtualizaDevs);\n  }\n\n\n  return (\n    <div id=\"app\">\n\n\n      {editing ? (\n        <aside>\n          <strong>Editar User</strong>\n          <DevUpdate\n            editing={editing}\n            setEditing={setEditing}\n            currentUser={currentUser}\n            handleUpdateDev={handleUpdateDev} >\n          </DevUpdate>\n        </aside>\n      ) :\n        (<aside>\n          <strong>Cadastrar</strong>\n          <DevAdd handleAddDev={handleAddDev} >\n          </DevAdd>\n        </aside>\n        )}\n\n\n\n      <main>\n        <ul>\n          {devs.map(dev => (\n            <DevItem key={dev._id} dev={dev} handleDeleteDev={handleDeleteDev} editRow={editRow} />\n          ))}\n        </ul>\n      </main>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}